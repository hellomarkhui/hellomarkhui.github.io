(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{286:function(t,e,s){"use strict";s.r(e);var v=s(7),a=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"版本管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本管理"}},[t._v("#")]),t._v(" 版本管理")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("本栏主要介绍git迭代发版流程，请认真阅读")])]),t._v(" "),e("p",[t._v("本栏的主要内容如下：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%B8%80%E3%80%81%E8%BF%AD%E4%BB%A3%E5%8F%91%E7%89%88%E6%B5%81%E7%A8%8B"}},[t._v("一、迭代发版流程")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8C%E3%80%81%E7%BA%BF%E4%B8%8A%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D"}},[t._v("二、线上故障修复")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E7%89%88%E6%9C%AC%E5%9B%9E%E6%BB%9A"}},[t._v("三、版本回滚")])])]),t._v(" "),e("p",[e("strong",[t._v("版本管理的一般流程如图所示：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/git-management.png"),alt:"git版本管理流程"}}),t._v(" "),e("h2",{attrs:{id:"一、迭代发版流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、迭代发版流程"}},[t._v("#")]),t._v(" 一、迭代发版流程")]),t._v(" "),e("p",[t._v("版本管理的一般流程如上图所示，每次正常的迭代为 A 到 M 的过程。")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("本次迭代版本的起点 A 。如图所示，标签 Tag0.1 其实是上一次迭代的终点，之所以打上版本标签，为了方便版本的回退管理。")])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("操作示例")]),t._v(" "),e("ul",[e("li",[t._v("1）切换到 main 分支，打上标签并录入备注信息")])]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" v0.0.0 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"初始版本"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("ul",[e("li",[t._v("2）推送标签到远程服务器，命令："),e("code",[t._v("git push origin <tagname>")])])]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin v0.0.0\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("strong",[t._v("首次迭代时需要创建 develop 分支（如图中 B），并推送到远程服务，后续的迭代不需要创建开发分支，开发分支是持续存在的。")])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("操作示例")]),t._v(" "),e("ol",[e("li",[t._v("切换到 main 分支: "),e("code",[t._v("$ git branch main")])]),t._v(" "),e("li",[t._v("创建开发分支："),e("code",[t._v("$ git branch develop")])]),t._v(" "),e("li",[t._v("切换到开发分支："),e("code",[t._v("$ git checkout develop")])]),t._v(" "),e("li",[t._v("推送到远程服务器并绑定跟踪："),e("code",[t._v("$ git push --set-upstream origin develop")])])])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("strong",[t._v("开发人员接到功能开发任务后，从 develop 分支拉取本地 features 分支（此分支不可推送到远程服务器），进行功能开发，并自测（如图 E、D、G、F）")])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("示例")]),t._v(" "),e("ol",[e("li",[t._v("切换到开发分支："),e("code",[t._v("$ git checkout develop")])]),t._v(" "),e("li",[t._v("创建功能特性分支："),e("code",[t._v("$ git branch features_xxx")])]),t._v(" "),e("li",[t._v("切换到开发分支："),e("code",[t._v("$ git checkout features_xxx")])])])]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[e("strong",[t._v("各开发人员的版本功能开发完成后，本地自测没问题，就把本地的 features 分支合并到 develop 分支（如图 H）。")])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("一般操作步骤示例:")]),t._v(" "),e("ol",[e("li",[t._v("切换 develop 分支: "),e("code",[t._v("$ git checkout develop")])]),t._v(" "),e("li",[t._v("Pull 最新的 develop 代码（即：git pull = git fetch + git merge）："),e("code",[t._v("$git pull")])]),t._v(" "),e("li",[t._v("本地合并分支（注意，当前分支应该为 develop）,如有冲突，请自行消除冲突："),e("code",[t._v("$git merge features_xxx")])]),t._v(" "),e("li",[t._v("推送到远程 develop 分支。")]),t._v(" "),e("li",[t._v("测试 develop 分支代码功能是否正常。")])])]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[e("strong",[t._v("合并完 develop 并检查运行正常后。进入提测阶段，创建预发版本，如 Release1.0.0。（如图中的 I 点）")])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("步骤示例:")]),t._v(" "),e("ol",[e("li",[t._v("在 develop 分支下创建预发版本分支 ："),e("code",[t._v("$ git branch release1.0.0")])]),t._v(" "),e("li",[t._v("切换到 release 分支 ： "),e("code",[t._v("$ git checkout release1.0.0")])]),t._v(" "),e("li",[t._v("推送分支到远程服务器并绑定跟踪："),e("code",[t._v("$ git push --set-upstream origin release1.0.0")])])])]),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[e("p",[e("strong",[t._v("测试人员通过流水线发版工具，对 Release 分支进行测试发版。测试过程中的 bug，都在 Release 分支上进行修复。")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("合并完 develop 并检查运行正常后。进入提测阶段，创建预发版本，如 Release1.0.0。（如图中的 I 点）")])])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("步骤示例:")]),t._v(" "),e("ol",[e("li",[t._v("切到 main 分支："),e("code",[t._v("$ git checkout main")])]),t._v(" "),e("li",[t._v("合并 Release 分支："),e("code",[t._v("$ git merge release1.0.0")])]),t._v(" "),e("li",[t._v("推送到远程服务器："),e("code",[t._v("$ git push")])]),t._v(" "),e("li",[t._v("打上标签："),e("code",[t._v('$ git tag -a v1.0.0 -m "初始版本"')])]),t._v(" "),e("li",[t._v("推送标签："),e("code",[t._v("$ git push origin v1.0.0")])]),t._v(" "),e("li",[t._v("切换到 "),e("code",[t._v("develop 分支：$ git checkout develop")])]),t._v(" "),e("li",[t._v("合并 "),e("code",[t._v("Release 分支：$ git merge release1.0.0")])]),t._v(" "),e("li",[t._v("推送到远程服务器："),e("code",[t._v("$ git push")])])])]),t._v(" "),e("ol",{attrs:{start:"8"}},[e("li",[e("strong",[t._v("删除 Release 分支，本次迭代完成。")])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("步骤示例:")]),t._v(" "),e("ol",[e("li",[t._v("删除本地分支："),e("code",[t._v("$ git branch -d release1.0.0")])]),t._v(" "),e("li",[t._v("删除远程分支："),e("code",[t._v("$ git push origin --delete release1.0.0")])])])]),t._v(" "),e("h2",{attrs:{id:"二、线上故障修复"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、线上故障修复"}},[t._v("#")]),t._v(" 二、线上故障修复")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("生产系统发现有 bug，需要紧急修复的，拉取 hotfix 分支进行修复（如图中 N 点）")])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("步骤示例:")]),t._v(" "),e("ol",[e("li",[t._v("切换到 main 分支 : "),e("code",[t._v("$ git checkout main")])]),t._v(" "),e("li",[t._v("创建 hotfix 分支："),e("code",[t._v("$ git branch hotfix")])]),t._v(" "),e("li",[t._v("切换到 hotfix 分支： "),e("code",[t._v("$ git checkout")])]),t._v(" "),e("li",[t._v("推送分支到远程服务器并绑定跟踪："),e("code",[t._v("$ git push --set-upstream origin hotfix")])]),t._v(" "),e("li",[t._v("对应的开发人员同步 hotfix 分支进行修复。")]),t._v(" "),e("li",[t._v("修复完成后合并到 main 分支与 develop 分支，main 分支打上 tag（操作参考上面的第 7 条）")]),t._v(" "),e("li",[t._v("删除 hotfix 分支，（参考上面第 8 条）")])])]),t._v(" "),e("h2",{attrs:{id:"三、版本回滚"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、版本回滚"}},[t._v("#")]),t._v(" 三、版本回滚")]),t._v(" "),e("p",[t._v("如果生产上线后，版本出现严重线上问题，需要回滚的情况。可依据 tag 标签 checkout 出对应的分支进行发版。")]),t._v(" "),e("ul",[e("li",[t._v("1）在 jenkins 发版时，分支里选择对应的 tag 标签即可")])])])}),[],!1,null,null,null);e.default=a.exports}}]);